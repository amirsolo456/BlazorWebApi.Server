
@inject IConfiguration _Configuration
@inject HttpClient _httpClient

<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">
        <img style="max-width:50px" src="/@_Configuration["Sitelogo"]" />
        @_Configuration["Title"]
    </a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        <ul class="navbar-nav mr-auto">
            <li class="nav-item active">
                <NavLink class="nav-link" Match="NavLinkMatch.All" href="/">خانه</NavLink>
            </li>
            <li class="nav-item active">
                <NavLink class="nav-link" Match="NavLinkMatch.All" href="/VillaIndex">داشبورد</NavLink>
            </li>
            <li class="nav-item">
                <a class="nav-link" Match="NavLinkMatch.All" href="/ShoppingCard/@CustomerID">
                    سبد خرید (
                    <span>
                        @if (shoppingCartCountModel != null)
                        {
                            @shoppingCartCountModel.Count
                        }
                    </span>
                    )
                </a>
            </li>
        </ul>

    </div>
</nav>



@code
{
    [CascadingParameter(Name = "ShoppingCartCountModel")]
    private ShoppingCartCountModel? shoppingCartCountModel { get; set; }
    int CustomerID = 1;
    protected override async Task OnInitializedAsync()
    {
        if (shoppingCartCountModel != null)
        {

            shoppingCartCountModel.CountChange += async () =>
            {
                shoppingCartCountModel.Count = await _httpClient.GetFromJsonAsync<int>("/api/ShoppingCart/count");
                StateHasChanged();
            };

        }
        await base.OnInitializedAsync();
    }


}

