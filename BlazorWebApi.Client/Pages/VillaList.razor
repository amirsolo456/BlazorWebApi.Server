@page "/"
@inject HomeRightSideBarService _Sidebarservice
@inject HttpClient _HttpClient
@inject NavigationManager _navigate
@inject BlazorWebApi.SharedComponents.AuthService authservice
@using Blazored.LocalStorage
@using BlazorWebApi.Domain.Entities;
@using BlazorWebApi.SharedComponents.SideBars.HomeRight
@using System.IdentityModel.Tokens.Jwt
@using Microsoft.IdentityModel.Tokens
@inject ILocalStorageService _localStorage

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
<style>
    .row {
        background-color: white;
    }

    .items-container {
        margin: auto;
        justify-content: center;
        justify-items: center;
    }

    .villa-container {
        margin: auto;
        justify-content: center;
        justify-items: center;
        padding: 5px;
        flex: auto;
        box-shadow: -1px 1px 10px;
    }

        .villa-container img:hover {
            transform: scale(1.1); /* بزرگتر شدن دکمه هنگام هاور */
        }

    .img {
        border-radius: 25px !important;
    }

</style>
<div class="row">
    <BlazorWebApi.SharedComponents.BodyHeaderComponent />
</div>
<div class="row" >
    <BlazorWebApi.SharedComponents.VillaSlideShow />
</div>
<div class="row">
    <BlazorWebApi.SharedComponents.BodySlideBarComponent />
</div>
<div class="row">
    <BlazorWebApi.SharedComponents.BodyNavBar OnSpecOffer="GetSpecialsOffes" Category="GetCategory" OnGiftCart="GetGiftCarts" OnDiscount="GetDiscount" OnBest="GetBest" />
</div>
<div class="row">
    <BlazorWebApi.SharedComponents.AmazingVillasComponent />
</div>

<div class="mb-6 lg:mb-9 text-center"><h3 class="text-h3"> @bodytitr</h3></div>


<div>
    <div id="targetSection" class="row items-container">
        @if (GoGiftcart == false)
        {
            if (Villas != null && Villas.Any())
            {
                @foreach (Villa item in Villas)
                {
                    <BlazorWebApi.SharedComponents.VillaItemComponent villa="item" IsMobile="false" />

                }
            }
            else
            {
                <div class="row" style="background-color:aliceblue  ;height:100px; margin-bottom:10px;">
                    <div style="margin:auto" class="mb-6 lg:mb-9 text-center"><h3 class="text-h3">هیچ ویلایی یافت نشد!</h3></div>

                </div>
                <div class="container" style="background-color:aliceblue; height:500px;margin-bottom:10px; display:flex ;position:relative;z-index:20; justify-content:center ; justify-items:center ;opacity:80% ; gap:30px;margin:auto">

                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4)">
                    </div>

                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4); ">
                    </div>

                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4);">
                    </div>
                    <div class="card-header-tabs" style="background-color:white;width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4)">
                        <div style="margin:auto;justify-content:center;justify-items:center;margin-top:20px">
                            <a href="#targetSection" style="color:rgba(0,0,0,0.3); display:flex; font-size:80px;width:100%; height:100%;justify-content:center;justify-items:center ">
                                <i class="fas fa-exclamation-triangle"></i>

                            </a>
                        </div>


                        <div style=" margin-top:15%;">
                            <div style="margin:auto;padding:10px; text-align:center ; font-family:Tahoma ">
                                <h3 class="text-h3" style="font-size:20px"> شما می توانید با رعایت قوانین و مقررات سایت  <br /> ویلای خود را از طریق <br /> <a href="#targetSection" style="font-family:Tahoma;font-size:26px;">ویلا جو</a><br /> اجاره دهید.</h3>

                            </div>

                            <div style="margin:auto; text-align:center">
                                <h2>
                                    <a href="#targetSection" style="font-family:Tahoma;font-size:26px;">
                                        مراحل انجام
                                    </a>
                                    را مطالعه فرمایید.
                                </h2>
                            </div>
                            <div style="margin:auto ; justify-content:center;justify-items:center ; align-content:center;overflow:hidden;margin-top:40px">
                                <button class="btn btn-primary" style="margin:auto;width:97%; margin-right:5px;height:50px">
                                    شروع ثبت ویلا
                                </button>
                            </div>


                        </div>
                    </div>
                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4); ">
                    </div>
                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4)">
                    </div>
                    <div class="card-header-tabs" style="background-color:rgba(0,0,0,0.2);width: 18rem ; height:90% ; margin-top:20px; border-radius:5px; box-shadow:-1px 1px 10px rgba(0,0,0,0.4);">
                    </div>
                </div>

            }
        }
        else
        {
            if (giftCarts != null && giftCarts.Any())
            {
                @foreach (GiftCarts item in giftCarts)
                {
                    <BlazorWebApi.SharedComponents.GiftCartItemComponent giftcart="item" IsMobile="false" />

                }
            }
            else
            {
                <div class="row" style="background-color:aliceblue; height:100px;margin-bottom:10px;">
                    <div style="margin:auto ; height:10%; " class="mb-6 lg:mb-9 text-center"><h3 class="text-h3">هیچ کارت هدیه ای یافت نشد!</h3></div>

                </div>
                <div class="container" style="background-color:aliceblue; height:400px;margin-bottom:10px; display:flex ;position:relative;z-index:20">
                    <div class="card-header-tabs" style="background-color:white">
                    </div>
                    <div>
                    </div>

                    <div>
                    </div>

                    <div>
                    </div>
                    <div>
                    </div>
                </div>




            }
        }
    </div>
</div>
<div class="villa-container">
    <div class="row" style=" border-radius: 50px;">
        <img class="img" style="width:650px ; height:350px ; border-radius:10px" src="_content/BlazorWebApi.SharedComponents/Images/villaview1.png" />
        <img class="img" style="width:650px ; height:350px ; border-radius:10px" src="_content/BlazorWebApi.SharedComponents/Images/villaview1.png" />
    </div>

</div>

<BlazorWebApi.SharedComponents.PortablRentBtnComponent />

<BlazorWebApi.SharedComponents.PortablSupportComponent />
@code {
    public IEnumerable<Villa>? Villas { get; set; }
    public IEnumerable<GiftCarts>? giftCarts { get; set; }
    private static string SecKey = "aVeryLongAndSecureSecretKeyThatIsAtLeast32Bytes";
    bool GoGiftcart = false;
    string bodytitr = "همه ویلاها";
}

@functions {
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _Sidebarservice.OnVillaOptions += VillaOptionsStateChanged;
            _Sidebarservice.OnBookingStep += BookingStepsStateChanged;
            _Sidebarservice.OnFAQ += FAQStateChanged;
            _Sidebarservice.OnSupport += SupportChanged;
            Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa");
        }
        catch (Exception)
        {
            Console.WriteLine("خطا در هنگام گرفتن اطلاعات ویلا");
        }

        await base.OnInitializedAsync();
    }


    private async Task GetSpecialsOffes()
    {
        Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa/offers");
        if (GoGiftcart) GoGiftcart = false;
        StateHasChanged();
    }

    private async Task GetCategory(int Type)
    {
        Console.WriteLine("type");
        Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa/idtype/" + Type);
        if (GoGiftcart) GoGiftcart = false;
        bodytitr = ((VillaType)Type).ToString();
        // bodytitr = "Fsd";
        StateHasChanged();
    }

    private async Task GetGiftCarts()
    {
        giftCarts = await _HttpClient.GetFromJsonAsync<IEnumerable<GiftCarts>>("/api/GiftCarts/all/3,3");
        GoGiftcart = true;
        bodytitr = "همه گیفت کارت ها";
        StateHasChanged();
    }

    private async Task GetDiscount() //تخفیف ها و پیشنهاد ها
    {
        Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa/takhfif");
        if (GoGiftcart) GoGiftcart = false;
        bodytitr = "همه ویلا های تخفیف دار";
        StateHasChanged();
    }

    private async Task GetBest()
    {
        Console.WriteLine("onoffer");
        Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa/best");
        if (GoGiftcart) GoGiftcart = false;
        bodytitr = "بهترین ویلا ها";
        StateHasChanged();
    }


    private async void VillaOptionsStateChanged()
    {

        Villas = await _HttpClient.GetFromJsonAsync<IEnumerable<Villa>>("/api/Villa/notreserved");
        if (GoGiftcart) GoGiftcart = false;
        await InvokeAsync(StateHasChanged);
    }

    private async void BookingStepsStateChanged()// مراحل رزرو
    {
        if (await CheckToken())
        {

        }
        else
        {
            _navigate.NavigateTo("/adminlogin");
        }
        return;
    }

    private async void FAQStateChanged()// سوالات متداول
    {
        if (await CheckToken())
        {

        }
        else
        {
            _navigate.NavigateTo("/adminlogin");
        }
        return;
    }

    private async void SupportChanged()// سوالات متداول
    {

        if (await CheckToken())
        {

        }
        else
        {
            _navigate.NavigateTo("/adminlogin");
        }
        return;
    }

    public void Dispose()// حذف رویداد
    {
        _Sidebarservice.OnVillaOptions -= VillaOptionsStateChanged;
        _Sidebarservice.OnBookingStep -= BookingStepsStateChanged;
        _Sidebarservice.OnFAQ -= FAQStateChanged;
        _Sidebarservice.OnSupport -= SupportChanged;
    }

    public async Task<bool> CheckToken()
    {
        bool b = false;
        try
        {
            string token = await _localStorage.GetItemAsync<string>("authToken");
            if (!string.IsNullOrEmpty(token))
            {
                try
                {
                    if (authservice.Validator(token, "aVeryLongAndSecureSecretKeyThatIsAtLeast32Bytes"))
                    {
                        Console.WriteLine("true");
                        return true;
                    }
                    else return false;
                }
                catch (Exception ex)
                {
                    Console.WriteLine("false" + ex.Message);
                    return false;
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
            return false;
        }
        return b;
    }
}

