@page "/AdminLogin"
@using System.Security.Claims
@using System.IdentityModel.Tokens.Jwt
@using Blazored.LocalStorage
@inject NavigationManager _navigate
@inject HttpClient _httpclient
@inject ILocalStorageService _localStorage

<div class="login-container">
    <h2>ورود به پنل ادمین</h2>
    <EditForm Model="admin" OnValidSubmit="HandleLogin">
        <div class="form-group">
            <label for="username">نام کاربری:</label>
            <InputText id="username" @bind-Value="admin.UserName" class="form-control modified valid" autocomplete="username" />
            <ValidationMessage For="@(() => admin.UserName)" />

        </div>

        <div class="form-group">
            <label for="password">رمز عبور:</label>
            <InputText id="password" @bind-Value="admin.Password" type="password" class="form-control" autocomplete="current-password" />
            <ValidationMessage For="@(() => admin.Password)" />

        </div>

        <button type="submit" class="btn btn-primary">ورود</button>
    </EditForm>

    <p>@formStatus</p>
</div>

@code {
    private string formStatus = "";
    public Admin admin = new Admin();

    protected override void OnInitialized()
    {
        base.OnInitialized();
    }

    private async Task HandleLogin()
    {
        try
        {
            var response = await _httpclient.GetStringAsync("/api/Admin/login/ " + admin.UserName + " , " + admin.Password);

            if (response != "")
            {

            
                var token = response;

                token = token.Substring(10, token.Length - 12);
                Console.WriteLine(token);
                await _localStorage.SetItemAsync("authToken", token);

                var handler = new JwtSecurityTokenHandler();

                HttpRequestMessage requestMessage = new HttpRequestMessage(HttpMethod.Post, "/api/LoginLog/");
                requestMessage.Content = new StringContent(JsonSerializer.Serialize(new LoginLog
                    {
                        IPAddress = "127.0.0.1",
                        IsAdmin = true,
                        IsCustomer = false,
                        IsOwner = false,
                        LoginTime = DateTime.Now.ToString(),
                        UserID = admin.ID,
                        IsLogin = true
                    }), Encoding.UTF8, "application/json");

                var resp = await _httpclient.SendAsync(requestMessage);

                if (resp.IsSuccessStatusCode)
                {
                    _navigate.NavigateTo("/");
                }        
            }
            else
            {
                formStatus = "لطفاً همه فیلدها را درست وارد کنید.";
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine("خطا" + ex.Message);
        }
    }
}
